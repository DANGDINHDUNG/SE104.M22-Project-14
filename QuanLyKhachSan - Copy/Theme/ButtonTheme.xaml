<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Style x:Key="MenuButtonTheme"
           TargetType="{x:Type RadioButton}"
           BasedOn="{StaticResource {x:Type ToggleButton}}">
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Background" Value="#D9DFE7"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="MinHeight" Value="40"/>
        <Setter Property="Margin" Value="0,0,0,24"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border CornerRadius="8" Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="#DEE3EA"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#DEE3EA"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="SettingOptionsButton"
           TargetType="{x:Type RadioButton}"
           BasedOn="{StaticResource {x:Type ToggleButton}}">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="20,0"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="Foreground" Value="#424F6B"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <WrapPanel Orientation="Vertical">
                        <TextBlock Text="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,0,8"/>
                        <Border x:Name="bd" Height="5" MaxWidth="35" CornerRadius="3" Background="#4EB1B3" Visibility="Hidden"/>
                    </WrapPanel>
                    
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Foreground" Value="#4EB1B3"/>
                            <Setter TargetName="bd" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="#38B9BB"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="WindowButtonTheme" TargetType="{x:Type Button}">
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Background" Value="#EEF0F5"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Width" Value="30"/>
        <Setter Property="Margin" Value="0,18,18,0"/>
        <Setter Property="Foreground" Value="#424F6B"/>
        <Setter Property="FontSize" Value="17"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="15" Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#F6F7FA"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="WindowButtonTheme2" TargetType="{x:Type Button}">
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Background" Value="#DEE3EA"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Width" Value="30"/>
        <Setter Property="Margin" Value="0,18,18,0"/>
        <Setter Property="Foreground" Value="#424F6B"/>
        <Setter Property="FontSize" Value="17"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="bd" CornerRadius="15" Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#F6F7FA"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0.5,1" EndPoint="0.5,0">
                            <GradientStop Color="#F6F7FA" Offset="0.85"/>
                            <GradientStop Color="#DEE3EA" Offset="0"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="AccountButtonTheme"
           TargetType="ToggleButton">
        <Setter Property="Background" Value="#EEF0F5"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Width" Value="120"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border CornerRadius="15" Background="{TemplateBinding Background}">
                        <StackPanel HorizontalAlignment="Center" 
                                    VerticalAlignment="Center" 
                                    Orientation="Horizontal">
                            <TextBlock Margin="0,0,10,0"
                                       FontSize="18"
                                       Foreground="#424F6B"
                                       Text="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                            </TextBlock>
                            <Image Height="16" Source="/Images/ArrowDownButton.png"/>
                        </StackPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#F6F7FA"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="#F6F7FA"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="AccountDropDownButtonTheme"
           TargetType="RadioButton">
        <Setter Property="Background" Value="#F6F7FA"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Margin" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border CornerRadius="8" Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#EEF0F5"/>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>